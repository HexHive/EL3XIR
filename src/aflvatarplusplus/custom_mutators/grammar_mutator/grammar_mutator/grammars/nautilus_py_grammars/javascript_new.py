ctx.rule(u'START',u'var a = [];\nvar b = [];\nvar c = [];\nvar d = [];\n{PROGRAM}')
ctx.rule(u'PROGRAM',u'{STATEMENT}\n{PROGRAM}')
ctx.rule(u'PROGRAM',u'')
ctx.rule(u'OBJECT',u'{IDENTIFIER}')
ctx.rule(u'OBJECT',u'\\{{OBJMEMBER}\\}')
ctx.rule(u'OBJECT',u'\\{\\}')
ctx.rule(u'OBJMEMBER',u'{VAR}: {LITERAL}, {OBJMEMBER}')
ctx.rule(u'OBJMEMBER',u'{VAR}: {LITERAL}')
ctx.rule(u'VAR',u'a')
ctx.rule(u'VAR',u'b')
ctx.rule(u'VAR',u'c')
ctx.rule(u'VAR',u'd')
ctx.rule(u'VAR',u'e')
ctx.rule(u'VAR',u'f')
ctx.rule(u'VAR',u'g')
ctx.rule(u'VAR',u'h')
ctx.rule(u'METHOD_NAME',u'{IDENTIFIER}')
ctx.rule(u'METHOD_NAME',u'eval')
ctx.rule(u'METHOD_NAME',u'uneval')
ctx.rule(u'METHOD_NAME',u'isFinite')
ctx.rule(u'METHOD_NAME',u'isNaN')
ctx.rule(u'METHOD_NAME',u'parseFloat')
ctx.rule(u'METHOD_NAME',u'parseInt')
ctx.rule(u'METHOD_NAME',u'decodeURI')
ctx.rule(u'METHOD_NAME',u'decodeURIComponent')
ctx.rule(u'METHOD_NAME',u'encodeURI')
ctx.rule(u'METHOD_NAME',u'encodeURIComponent')
ctx.rule(u'METHOD_NAME',u'escape')
ctx.rule(u'METHOD_NAME',u'unescape')
ctx.rule(u'METHOD_NAME',u'assign')
ctx.rule(u'METHOD_NAME',u'create')
ctx.rule(u'METHOD_NAME',u'defineProperty')
ctx.rule(u'METHOD_NAME',u'defineProperties')
ctx.rule(u'METHOD_NAME',u'entries')
ctx.rule(u'METHOD_NAME',u'freeze')
ctx.rule(u'METHOD_NAME',u'getOwnPropertyDescriptor')
ctx.rule(u'METHOD_NAME',u'getOwnPropertyDescriptors')
ctx.rule(u'METHOD_NAME',u'getOwnPropertyNames')
ctx.rule(u'METHOD_NAME',u'getOwnPropertySymbols')
ctx.rule(u'METHOD_NAME',u'getPrototypeOf')
ctx.rule(u'METHOD_NAME',u'is')
ctx.rule(u'METHOD_NAME',u'isExtensible')
ctx.rule(u'METHOD_NAME',u'isFrozen')
ctx.rule(u'METHOD_NAME',u'isSealed')
ctx.rule(u'METHOD_NAME',u'keys')
ctx.rule(u'METHOD_NAME',u'preventExtensions')
ctx.rule(u'METHOD_NAME',u'seal')
ctx.rule(u'METHOD_NAME',u'setPrototypeOf')
ctx.rule(u'METHOD_NAME',u'values')
ctx.rule(u'METHOD_NAME',u'delete')
ctx.rule(u'METHOD_NAME',u'__defineGetter__')
ctx.rule(u'METHOD_NAME',u'__defineSetter__')
ctx.rule(u'METHOD_NAME',u'__lookupGetter__')
ctx.rule(u'METHOD_NAME',u'__lookupSetter__')
ctx.rule(u'METHOD_NAME',u'hasOwnProperty')
ctx.rule(u'METHOD_NAME',u'isPrototypeOf')
ctx.rule(u'METHOD_NAME',u'propertyIsEnumerable')
ctx.rule(u'METHOD_NAME',u'toSource')
ctx.rule(u'METHOD_NAME',u'toLocaleString')
ctx.rule(u'METHOD_NAME',u'toString')
ctx.rule(u'METHOD_NAME',u'unwatch')
ctx.rule(u'METHOD_NAME',u'valueOf')
ctx.rule(u'METHOD_NAME',u'watch')
ctx.rule(u'METHOD_NAME',u'apply')
ctx.rule(u'METHOD_NAME',u'bind')
ctx.rule(u'METHOD_NAME',u'call')
ctx.rule(u'METHOD_NAME',u'isGenerator')
ctx.rule(u'METHOD_NAME',u'valueOf')
ctx.rule(u'METHOD_NAME',u'for')
ctx.rule(u'METHOD_NAME',u'keyFor')
ctx.rule(u'METHOD_NAME',u'stringify')
ctx.rule(u'METHOD_NAME',u'isInteger')
ctx.rule(u'METHOD_NAME',u'isSafeInteger')
ctx.rule(u'METHOD_NAME',u'toInteger')
ctx.rule(u'METHOD_NAME',u'toExponential')
ctx.rule(u'METHOD_NAME',u'toFixed')
ctx.rule(u'METHOD_NAME',u'toLocaleString')
ctx.rule(u'METHOD_NAME',u'toPrecision')
ctx.rule(u'METHOD_NAME',u'abs')
ctx.rule(u'METHOD_NAME',u'acos')
ctx.rule(u'METHOD_NAME',u'acosh')
ctx.rule(u'METHOD_NAME',u'asin')
ctx.rule(u'METHOD_NAME',u'asinh')
ctx.rule(u'METHOD_NAME',u'atan')
ctx.rule(u'METHOD_NAME',u'atanh')
ctx.rule(u'METHOD_NAME',u'atan2')
ctx.rule(u'METHOD_NAME',u'cbrt')
ctx.rule(u'METHOD_NAME',u'ceil')
ctx.rule(u'METHOD_NAME',u'clz32')
ctx.rule(u'METHOD_NAME',u'cos')
ctx.rule(u'METHOD_NAME',u'cosh')
ctx.rule(u'METHOD_NAME',u'exp')
ctx.rule(u'METHOD_NAME',u'expm1')
ctx.rule(u'METHOD_NAME',u'floor')
ctx.rule(u'METHOD_NAME',u'fround')
ctx.rule(u'METHOD_NAME',u'hypot')
ctx.rule(u'METHOD_NAME',u'imul')
ctx.rule(u'METHOD_NAME',u'log')
ctx.rule(u'METHOD_NAME',u'log1p')
ctx.rule(u'METHOD_NAME',u'log10')
ctx.rule(u'METHOD_NAME',u'log2')
ctx.rule(u'METHOD_NAME',u'max')
ctx.rule(u'METHOD_NAME',u'min')
ctx.rule(u'METHOD_NAME',u'pow')
ctx.rule(u'METHOD_NAME',u'random')
ctx.rule(u'METHOD_NAME',u'round')
ctx.rule(u'METHOD_NAME',u'sign')
ctx.rule(u'METHOD_NAME',u'sin')
ctx.rule(u'METHOD_NAME',u'sinh')
ctx.rule(u'METHOD_NAME',u'sqrt')
ctx.rule(u'METHOD_NAME',u'tan')
ctx.rule(u'METHOD_NAME',u'tanh')
ctx.rule(u'METHOD_NAME',u'trunc')
ctx.rule(u'METHOD_NAME',u'now')
ctx.rule(u'METHOD_NAME',u'parse')
ctx.rule(u'METHOD_NAME',u'UTC')
ctx.rule(u'METHOD_NAME',u'getDate')
ctx.rule(u'METHOD_NAME',u'getDay')
ctx.rule(u'METHOD_NAME',u'getFullYear')
ctx.rule(u'METHOD_NAME',u'getHours')
ctx.rule(u'METHOD_NAME',u'getMilliseconds')
ctx.rule(u'METHOD_NAME',u'getMinutes')
ctx.rule(u'METHOD_NAME',u'getMonth')
ctx.rule(u'METHOD_NAME',u'getSeconds')
ctx.rule(u'METHOD_NAME',u'getTime')
ctx.rule(u'METHOD_NAME',u'getTimezoneOffset')
ctx.rule(u'METHOD_NAME',u'getUTCDate')
ctx.rule(u'METHOD_NAME',u'getUTCDay')
ctx.rule(u'METHOD_NAME',u'getUTCFullYear')
ctx.rule(u'METHOD_NAME',u'getUTCHours')
ctx.rule(u'METHOD_NAME',u'getUTCMilliseconds')
ctx.rule(u'METHOD_NAME',u'getUTCMinutes')
ctx.rule(u'METHOD_NAME',u'getUTCMonth')
ctx.rule(u'METHOD_NAME',u'getUTCSeconds')
ctx.rule(u'METHOD_NAME',u'getYear')
ctx.rule(u'METHOD_NAME',u'setDate')
ctx.rule(u'METHOD_NAME',u'setFullYear')
ctx.rule(u'METHOD_NAME',u'setHours')
ctx.rule(u'METHOD_NAME',u'setMilliseconds')
ctx.rule(u'METHOD_NAME',u'setMinutes')
ctx.rule(u'METHOD_NAME',u'setMonth')
ctx.rule(u'METHOD_NAME',u'setSeconds')
ctx.rule(u'METHOD_NAME',u'setTime')
ctx.rule(u'METHOD_NAME',u'setUTCDate')
ctx.rule(u'METHOD_NAME',u'setUTCFullYear')
ctx.rule(u'METHOD_NAME',u'setUTCHours')
ctx.rule(u'METHOD_NAME',u'setUTCMilliseconds')
ctx.rule(u'METHOD_NAME',u'setUTCMinutes')
ctx.rule(u'METHOD_NAME',u'setUTCMonth')
ctx.rule(u'METHOD_NAME',u'setUTCSeconds')
ctx.rule(u'METHOD_NAME',u'setYear')
ctx.rule(u'METHOD_NAME',u'toDateString')
ctx.rule(u'METHOD_NAME',u'toISOString')
ctx.rule(u'METHOD_NAME',u'toJSON')
ctx.rule(u'METHOD_NAME',u'toGMTString')
ctx.rule(u'METHOD_NAME',u'toLocaleDateString')
ctx.rule(u'METHOD_NAME',u'toLocaleFormat')
ctx.rule(u'METHOD_NAME',u'toLocaleString')
ctx.rule(u'METHOD_NAME',u'toLocaleTimeString')
ctx.rule(u'METHOD_NAME',u'toTimeString')
ctx.rule(u'METHOD_NAME',u'toUTCString')
ctx.rule(u'METHOD_NAME',u'indexOf')
ctx.rule(u'METHOD_NAME',u'substring')
ctx.rule(u'METHOD_NAME',u'charAt')
ctx.rule(u'METHOD_NAME',u'strcmp')
ctx.rule(u'METHOD_NAME',u'fromCharCode')
ctx.rule(u'METHOD_NAME',u'fromCodePoint')
ctx.rule(u'METHOD_NAME',u'raw')
ctx.rule(u'METHOD_NAME',u'charCodeAt')
ctx.rule(u'METHOD_NAME',u'slice')
ctx.rule(u'METHOD_NAME',u'codePointAt')
ctx.rule(u'METHOD_NAME',u'concat')
ctx.rule(u'METHOD_NAME',u'includes')
ctx.rule(u'METHOD_NAME',u'endsWith')
ctx.rule(u'METHOD_NAME',u'lastIndexOf')
ctx.rule(u'METHOD_NAME',u'localeCompare')
ctx.rule(u'METHOD_NAME',u'match')
ctx.rule(u'METHOD_NAME',u'normalize')
ctx.rule(u'METHOD_NAME',u'padEnd')
ctx.rule(u'METHOD_NAME',u'padStart')
ctx.rule(u'METHOD_NAME',u'quote')
ctx.rule(u'METHOD_NAME',u'repeat')
ctx.rule(u'METHOD_NAME',u'replace')
ctx.rule(u'METHOD_NAME',u'search')
ctx.rule(u'METHOD_NAME',u'split')
ctx.rule(u'METHOD_NAME',u'startsWith')
ctx.rule(u'METHOD_NAME',u'substr')
ctx.rule(u'METHOD_NAME',u'toLocaleLowerCase')
ctx.rule(u'METHOD_NAME',u'toLocaleUpperCase')
ctx.rule(u'METHOD_NAME',u'toLowerCase')
ctx.rule(u'METHOD_NAME',u'toUpperCase')
ctx.rule(u'METHOD_NAME',u'trim')
ctx.rule(u'METHOD_NAME',u'trimleft')
ctx.rule(u'METHOD_NAME',u'trimright')
ctx.rule(u'METHOD_NAME',u'anchor')
ctx.rule(u'METHOD_NAME',u'big')
ctx.rule(u'METHOD_NAME',u'blink')
ctx.rule(u'METHOD_NAME',u'bold')
ctx.rule(u'METHOD_NAME',u'fixed')
ctx.rule(u'METHOD_NAME',u'fontcolor')
ctx.rule(u'METHOD_NAME',u'fontsize')
ctx.rule(u'METHOD_NAME',u'italics')
ctx.rule(u'METHOD_NAME',u'link')
ctx.rule(u'METHOD_NAME',u'small')
ctx.rule(u'METHOD_NAME',u'strike')
ctx.rule(u'METHOD_NAME',u'sub')
ctx.rule(u'METHOD_NAME',u'sup')
ctx.rule(u'METHOD_NAME',u'compile')
ctx.rule(u'METHOD_NAME',u'exec')
ctx.rule(u'METHOD_NAME',u'test')
ctx.rule(u'METHOD_NAME',u'from')
ctx.rule(u'METHOD_NAME',u'isArray')
ctx.rule(u'METHOD_NAME',u'of')
ctx.rule(u'METHOD_NAME',u'copyWithin')
ctx.rule(u'METHOD_NAME',u'fill')
ctx.rule(u'METHOD_NAME',u'pop')
ctx.rule(u'METHOD_NAME',u'push')
ctx.rule(u'METHOD_NAME',u'reverse')
ctx.rule(u'METHOD_NAME',u'shift')
ctx.rule(u'METHOD_NAME',u'sort')
ctx.rule(u'METHOD_NAME',u'splice')
ctx.rule(u'METHOD_NAME',u'unshift')
ctx.rule(u'METHOD_NAME',u'concat')
ctx.rule(u'METHOD_NAME',u'join')
ctx.rule(u'METHOD_NAME',u'every')
ctx.rule(u'METHOD_NAME',u'filter')
ctx.rule(u'METHOD_NAME',u'findIndex')
ctx.rule(u'METHOD_NAME',u'forEach')
ctx.rule(u'METHOD_NAME',u'map')
ctx.rule(u'METHOD_NAME',u'reduce')
ctx.rule(u'METHOD_NAME',u'reduceRight')
ctx.rule(u'METHOD_NAME',u'some')
ctx.rule(u'METHOD_NAME',u'move')
ctx.rule(u'METHOD_NAME',u'getInt8')
ctx.rule(u'METHOD_NAME',u'getUint8')
ctx.rule(u'METHOD_NAME',u'getInt16')
ctx.rule(u'METHOD_NAME',u'getUint16')
ctx.rule(u'METHOD_NAME',u'getInt32')
ctx.rule(u'METHOD_NAME',u'getUint32')
ctx.rule(u'METHOD_NAME',u'getFloat32')
ctx.rule(u'METHOD_NAME',u'getFloat64')
ctx.rule(u'METHOD_NAME',u'setInt8')
ctx.rule(u'METHOD_NAME',u'setUint8')
ctx.rule(u'METHOD_NAME',u'setInt16')
ctx.rule(u'METHOD_NAME',u'setUint16')
ctx.rule(u'METHOD_NAME',u'setInt32')
ctx.rule(u'METHOD_NAME',u'setUint32')
ctx.rule(u'METHOD_NAME',u'setFloat32')
ctx.rule(u'METHOD_NAME',u'setFloat64')
ctx.rule(u'METHOD_NAME',u'isView')
ctx.rule(u'METHOD_NAME',u'transfer')
ctx.rule(u'METHOD_NAME',u'clear')
ctx.rule(u'METHOD_NAME',u'get')
ctx.rule(u'METHOD_NAME',u'has')
ctx.rule(u'METHOD_NAME',u'set')
ctx.rule(u'METHOD_NAME',u'add')
ctx.rule(u'METHOD_NAME',u'splat')
ctx.rule(u'METHOD_NAME',u'check')
ctx.rule(u'METHOD_NAME',u'extractLane')
ctx.rule(u'METHOD_NAME',u'replaceLane')
ctx.rule(u'METHOD_NAME',u'load')
ctx.rule(u'METHOD_NAME',u'load1')
ctx.rule(u'METHOD_NAME',u'load2')
ctx.rule(u'METHOD_NAME',u'load3')
ctx.rule(u'METHOD_NAME',u'store')
ctx.rule(u'METHOD_NAME',u'store1')
ctx.rule(u'METHOD_NAME',u'store2')
ctx.rule(u'METHOD_NAME',u'store3')
ctx.rule(u'METHOD_NAME',u'addSaturate')
ctx.rule(u'METHOD_NAME',u'div')
ctx.rule(u'METHOD_NAME',u'mul')
ctx.rule(u'METHOD_NAME',u'neg')
ctx.rule(u'METHOD_NAME',u'reciprocalApproximation')
ctx.rule(u'METHOD_NAME',u'reciprocalSqrtApproximation')
ctx.rule(u'METHOD_NAME',u'subSaturate')
ctx.rule(u'METHOD_NAME',u'shuffle')
ctx.rule(u'METHOD_NAME',u'swizzle')
ctx.rule(u'METHOD_NAME',u'maxNum')
ctx.rule(u'METHOD_NAME',u'minNum')
ctx.rule(u'METHOD_NAME',u'select')
ctx.rule(u'METHOD_NAME',u'equal')
ctx.rule(u'METHOD_NAME',u'notEqual')
ctx.rule(u'METHOD_NAME',u'lessThan')
ctx.rule(u'METHOD_NAME',u'lessThanOrEqual')
ctx.rule(u'METHOD_NAME',u'greaterThan')
ctx.rule(u'METHOD_NAME',u'greaterThanOrEqual')
ctx.rule(u'METHOD_NAME',u'and')
ctx.rule(u'METHOD_NAME',u'or')
ctx.rule(u'METHOD_NAME',u'xor')
ctx.rule(u'METHOD_NAME',u'not')
ctx.rule(u'METHOD_NAME',u'shiftLeftByScalar')
ctx.rule(u'METHOD_NAME',u'shiftRightByScalar')
ctx.rule(u'METHOD_NAME',u'allTrue')
ctx.rule(u'METHOD_NAME',u'anyTrue')
ctx.rule(u'METHOD_NAME',u'fromFloat32x4')
ctx.rule(u'METHOD_NAME',u'fromFloat32x4Bits')
ctx.rule(u'METHOD_NAME',u'fromFloat64x2Bits')
ctx.rule(u'METHOD_NAME',u'fromInt32x4')
ctx.rule(u'METHOD_NAME',u'fromInt32x4Bits')
ctx.rule(u'METHOD_NAME',u'fromInt16x8Bits')
ctx.rule(u'METHOD_NAME',u'fromInt8x16Bits')
ctx.rule(u'METHOD_NAME',u'fromUint32x4')
ctx.rule(u'METHOD_NAME',u'fromUint32x4Bits')
ctx.rule(u'METHOD_NAME',u'fromUint16x8Bits')
ctx.rule(u'METHOD_NAME',u'fromUint8x16Bits')
ctx.rule(u'METHOD_NAME',u'neg')
ctx.rule(u'METHOD_NAME',u'compareExchange')
ctx.rule(u'METHOD_NAME',u'exchange')
ctx.rule(u'METHOD_NAME',u'wait')
ctx.rule(u'METHOD_NAME',u'wake')
ctx.rule(u'METHOD_NAME',u'isLockFree')
ctx.rule(u'METHOD_NAME',u'all')
ctx.rule(u'METHOD_NAME',u'race')
ctx.rule(u'METHOD_NAME',u'reject')
ctx.rule(u'METHOD_NAME',u'resolve')
ctx.rule(u'METHOD_NAME',u'catch')
ctx.rule(u'METHOD_NAME',u'then')
ctx.rule(u'METHOD_NAME',u'finally')
ctx.rule(u'METHOD_NAME',u'next')
ctx.rule(u'METHOD_NAME',u'return')
ctx.rule(u'METHOD_NAME',u'throw')
ctx.rule(u'METHOD_NAME',u'close')
ctx.rule(u'METHOD_NAME',u'send')
ctx.rule(u'METHOD_NAME',u'apply')
ctx.rule(u'METHOD_NAME',u'construct')
ctx.rule(u'METHOD_NAME',u'deleteProperty')
ctx.rule(u'METHOD_NAME',u'ownKeys')
ctx.rule(u'METHOD_NAME',u'getCanonicalLocales')
ctx.rule(u'METHOD_NAME',u'supportedLocalesOf')
ctx.rule(u'METHOD_NAME',u'resolvedOptions')
ctx.rule(u'METHOD_NAME',u'formatToParts')
ctx.rule(u'METHOD_NAME',u'resolvedOptions')
ctx.rule(u'METHOD_NAME',u'instantiate')
ctx.rule(u'METHOD_NAME',u'instantiateStreaming')
ctx.rule(u'METHOD_NAME',u'compileStreaming')
ctx.rule(u'METHOD_NAME',u'validate')
ctx.rule(u'METHOD_NAME',u'customSections')
ctx.rule(u'METHOD_NAME',u'exports')
ctx.rule(u'METHOD_NAME',u'imports')
ctx.rule(u'METHOD_NAME',u'grow')
ctx.rule(u'METHOD_NAME',u'super')
ctx.rule(u'METHOD_NAME',u'void')
ctx.rule(u'METHOD_NAME',u'in')
ctx.rule(u'METHOD_NAME',u'instanceof')
ctx.rule(u'METHOD_NAME',u'print')
ctx.rule(u'METHOD_NAME',u'')
ctx.rule(u'METHODPARAMETERLIST',u'')
ctx.rule(u'METHODPARAMETERLIST',u'({METHODPARAMETERS})')
ctx.rule(u'METHODPARAMETERS',u'{EXPR}')
ctx.rule(u'METHODPARAMETERS',u'{VAR}={EXPR}')
ctx.rule(u'METHODPARAMETERS',u'{EXPR},{METHODPARAMETERS}')
ctx.rule(u'METHODPARAMETERS',u'{VAR}={EXPR},{METHODPARAMETERS}')
ctx.rule(u'METHODCALL',u'{OBJECT}{PROPERTY}{METHODCALL1}')
ctx.rule(u'METHODCALL',u'{METHOD_NAME}{ARGS}{METHODCALL1}')
ctx.rule(u'METHODCALL',u'SIMD.{SIMD_TYPE}.{SIMD_FUNCTION}{ARGS}{METHODCALL1}')
ctx.rule(u'METHODCALL1',u'.{METHOD_NAME}{ARGS}{METHODCALL1}')
ctx.rule(u'METHODCALL1',u'.{SIMD_FUNCTION}{ARGS}{METHODCALL1}')
ctx.rule(u'METHODCALL1',u'')
ctx.rule(u'PROPERTY',u'.length{PROPERTY}')
ctx.rule(u'PROPERTY',u'.prototype{PROPERTY}')
ctx.rule(u'PROPERTY',u'.constructor{PROPERTY}')
ctx.rule(u'PROPERTY',u'.__proto__{PROPERTY}')
ctx.rule(u'PROPERTY',u'.__noSuchMethod__{PROPERTY}')
ctx.rule(u'PROPERTY',u'.__count__{PROPERTY}')
ctx.rule(u'PROPERTY',u'.__parent__{PROPERTY}')
ctx.rule(u'PROPERTY',u'.arguments{PROPERTY}')
ctx.rule(u'PROPERTY',u'.arity{PROPERTY}')
ctx.rule(u'PROPERTY',u'.caller{PROPERTY}')
ctx.rule(u'PROPERTY',u'.name{PROPERTY}')
ctx.rule(u'PROPERTY',u'.displayName{PROPERTY}')
ctx.rule(u'PROPERTY',u'.iterator{PROPERTY}')
ctx.rule(u'PROPERTY',u'.asyncIterator{PROPERTY}')
ctx.rule(u'PROPERTY',u'.match{PROPERTY}')
ctx.rule(u'PROPERTY',u'.replace{PROPERTY}')
ctx.rule(u'PROPERTY',u'.search{PROPERTY}')
ctx.rule(u'PROPERTY',u'.split{PROPERTY}')
ctx.rule(u'PROPERTY',u'.hasInstance{PROPERTY}')
ctx.rule(u'PROPERTY',u'.isConcatSpreadable{PROPERTY}')
ctx.rule(u'PROPERTY',u'.unscopables{PROPERTY}')
ctx.rule(u'PROPERTY',u'.species{PROPERTY}')
ctx.rule(u'PROPERTY',u'.toPrimitive{PROPERTY}')
ctx.rule(u'PROPERTY',u'.toStringTag{PROPERTY}')
ctx.rule(u'PROPERTY',u'.fileName{PROPERTY}')
ctx.rule(u'PROPERTY',u'.lineNumber{PROPERTY}')
ctx.rule(u'PROPERTY',u'.columnNumber{PROPERTY}')
ctx.rule(u'PROPERTY',u'.message{PROPERTY}')
ctx.rule(u'PROPERTY',u'.name{PROPERTY}')
ctx.rule(u'PROPERTY',u'.EPSILON{PROPERTY}')
ctx.rule(u'PROPERTY',u'.MAX_SAFE_INTEGER{PROPERTY}')
ctx.rule(u'PROPERTY',u'.MAX_VALUE{PROPERTY}')
ctx.rule(u'PROPERTY',u'.MIN_SAFE_INTEGER{PROPERTY}')
ctx.rule(u'PROPERTY',u'.MIN_VALUE{PROPERTY}')
ctx.rule(u'PROPERTY',u'.NaN{PROPERTY}')
ctx.rule(u'PROPERTY',u'.NEGATIVE_INFINITY{PROPERTY}')
ctx.rule(u'PROPERTY',u'.POSITIVE_INFINITY{PROPERTY}')
ctx.rule(u'PROPERTY',u'.E{PROPERTY}')
ctx.rule(u'PROPERTY',u'.LN2{PROPERTY}')
ctx.rule(u'PROPERTY',u'.LN10{PROPERTY}')
ctx.rule(u'PROPERTY',u'.LOG2E{PROPERTY}')
ctx.rule(u'PROPERTY',u'.LOG10E{PROPERTY}')
ctx.rule(u'PROPERTY',u'.PI{PROPERTY}')
ctx.rule(u'PROPERTY',u'.SQRT1_2{PROPERTY}')
ctx.rule(u'PROPERTY',u'.SQRT2{PROPERTY}')
ctx.rule(u'PROPERTY',u'.flags{PROPERTY}')
ctx.rule(u'PROPERTY',u'.global{PROPERTY}')
ctx.rule(u'PROPERTY',u'.ignoreCase{PROPERTY}')
ctx.rule(u'PROPERTY',u'.multiline{PROPERTY}')
ctx.rule(u'PROPERTY',u'.source{PROPERTY}')
ctx.rule(u'PROPERTY',u'.sticky{PROPERTY}')
ctx.rule(u'PROPERTY',u'.unicode{PROPERTY}')
ctx.rule(u'PROPERTY',u'[{DECIMALNUMBER}]{PROPERTY}')
ctx.rule(u'PROPERTY',u'[{STRING}]{PROPERTY}')
ctx.rule(u'PROPERTY',u'.buffer{PROPERTY}')
ctx.rule(u'PROPERTY',u'.byteLength{PROPERTY}')
ctx.rule(u'PROPERTY',u'.byteOffset{PROPERTY}')
ctx.rule(u'PROPERTY',u'.BYTES_PER_ELEMENT{PROPERTY}')
ctx.rule(u'PROPERTY',u'.compare{PROPERTY}')
ctx.rule(u'PROPERTY',u'.format{PROPERTY}')
ctx.rule(u'PROPERTY',u'.callee{PROPERTY}')
ctx.rule(u'PROPERTY',u'.caller{PROPERTY}')
ctx.rule(u'PROPERTY',u'.memory{PROPERTY}')
ctx.rule(u'PROPERTY',u'.exports{PROPERTY}')
ctx.rule(u'PROPERTY',u'')
ctx.rule(u'ARGS',u'()')
ctx.rule(u'ARGS',u'({ARGLIST})')
ctx.rule(u'ARGLIST',u'{EXPR},{ARGLIST}')
ctx.rule(u'ARGLIST',u'{EXPR}')
ctx.rule(u'IDENTIFIERLIST',u'{IDENTIFIER},{IDENTIFIERLIST}')
ctx.rule(u'IDENTIFIERLIST',u'({IDENTIFIERLIST}),{IDENTIFIERLIST}')
ctx.rule(u'IDENTIFIERLIST',u'{IDENTIFIER}')
ctx.rule(u'STATEMENT',u'{EXPR};')
ctx.rule(u'STATEMENT',u'{VAR}:')
ctx.rule(u'STATEMENT',u'{DECLARATION}')
ctx.rule(u'STATEMENT',u'typeof {EXPR};')
ctx.rule(u'STATEMENT',u'void {EXPR};')
ctx.rule(u'STATEMENT',u'return {EXPR};')
ctx.rule(u'STATEMENT',u'{CLASSDEF}')
ctx.rule(u'STATEMENT',u'{FUNCTIONDEF}')
ctx.rule(u'STATEMENT',u'async {FUNCTIONDEF}')
ctx.rule(u'STATEMENT',u'export {EXPR};')
ctx.rule(u'STATEMENT',u'export {FUNCTIONDEF}')
ctx.rule(u'STATEMENT',u'export {DECLARATION}')
ctx.rule(u'STATEMENT',u'import {IMPORT_NAME} as {METHOD_NAME} from {STRING}')
ctx.rule(u'DECLARATION',u'{DECLARATION_TYPE} {VAR} = {EXPR};')
ctx.rule(u'DECLARATION',u'{DECLARATION_TYPE} {VAR}{PROPERTY} = {EXPR};')
ctx.rule(u'DECLARATION',u'{DECLARATION_TYPE} {VAR}[{DECIMALNUMBER}] = {EXPR};')
ctx.rule(u'DECLARATION',u'{DECLARATION_TYPE} \\{ {ARGS} \\} = {EXPR};')
ctx.rule(u'DECLARATION_TYPE',u'')
ctx.rule(u'DECLARATION_TYPE',u'var')
ctx.rule(u'DECLARATION_TYPE',u'let')
ctx.rule(u'DECLARATION_TYPE',u'const')
ctx.rule(u'IMPORT_NAME',u'*')
ctx.rule(u'IMPORT_NAME',u'{METHOD_NAME}')
ctx.rule(u'CLASSDEF',u'class {IDENTIFIER}\\{\n{CLASS_CONTENT}\n\\}\n')
ctx.rule(u'CLASSDEF',u'class {IDENTIFIER} extends {IDENTIFIER}\\{\n{CLASS_CONTENT}\n\\}\n')
ctx.rule(u'CLASS_CONTENT',u'')
ctx.rule(u'CLASS_CONTENT',u'{METHODDEF}\n{CLASS_CONTENT}')
ctx.rule(u'FUNCTIONDEF',u'function {IDENTIFIER}{FUNCTIONARGS}\\{\n{FUNCTIONBODY}\n\\}\n')
ctx.rule(u'FUNCTIONDEF',u'{IDENTIFIER} => {EXPR}')
ctx.rule(u'FUNCTIONDEF',u'{IDENTIFIER} => \\{ {FUNCTIONBODY} \\}')
ctx.rule(u'FUNCTIONDEF',u'{FUNCTIONARGS} => {EXPR}')
ctx.rule(u'FUNCTIONDEF',u'{FUNCTIONARGS} => \\{ {FUNCTIONBODY} \\}')
ctx.rule(u'METHODDEF',u'{IDENTIFIER}{FUNCTIONARGS}\\{\n{FUNCTIONBODY}\n\\}\n')
ctx.rule(u'FUNCTIONBODY',u'{PROGRAM}')
ctx.rule(u'FUNCTIONARGS',u'()')
ctx.rule(u'FUNCTIONARGS',u'({IDENTIFIERLIST})')
ctx.rule(u'IDENTIFIERLIST',u'{IDENTIFIER}')
ctx.rule(u'IDENTIFIERLIST',u'{IDENTIFIER}, {IDENTIFIERLIST}')
ctx.rule(u'EXPR',u'({EXPR})')
ctx.rule(u'EXPR',u'\\{{OBJMEMBER}\\}')
ctx.rule(u'EXPR',u'{VAR}')
ctx.rule(u'EXPR',u'...{VAR}')
ctx.rule(u'EXPR',u'delete {EXPR}')
ctx.rule(u'EXPR',u'new {IDENTIFIER}{ARGS}')
ctx.rule(u'EXPR',u'await {EXPR}')
ctx.rule(u'EXPR',u'{LITERAL}')
ctx.rule(u'EXPR',u'{IDENTIFIER}')
ctx.rule(u'EXPR',u'{EXPR}{ASSIGNMENTOPERATION}')
ctx.rule(u'EXPR',u'{METHODCALL}')
ctx.rule(u'EXPR',u'({ARITHMETICOPERATION})')
ctx.rule(u'EXPR',u'({COMPARISONOPERATION})')
ctx.rule(u'EXPR',u'({BYTEWISEOPERATION})')
ctx.rule(u'EXPR',u'({LOGICALOPERATION})')
ctx.rule(u'EXPR',u'({EXPR} ? {EXPR} : {EXPR})')
ctx.rule(u'EXPR',u'{EXPR}[{EXPR}]')
ctx.rule(u'ARITHMETICOPERATION',u'{EXPR}/{EXPR}')
ctx.rule(u'ARITHMETICOPERATION',u'{EXPR}*{EXPR}')
ctx.rule(u'ARITHMETICOPERATION',u'{EXPR}+{EXPR}')
ctx.rule(u'ARITHMETICOPERATION',u'{EXPR}-{EXPR}')
ctx.rule(u'ARITHMETICOPERATION',u'{EXPR}%{EXPR}')
ctx.rule(u'ARITHMETICOPERATION',u'{EXPR}**{EXPR}')
ctx.rule(u'ARITHMETICOPERATION',u'{EXPR}++')
ctx.rule(u'ARITHMETICOPERATION',u'++{EXPR}')
ctx.rule(u'ARITHMETICOPERATION',u'--{EXPR}')
ctx.rule(u'ARITHMETICOPERATION',u'{EXPR}--')
ctx.rule(u'ASSIGNMENTOPERATION',u'={EXPR}')
ctx.rule(u'ASSIGNMENTOPERATION',u'+={EXPR}')
ctx.rule(u'ASSIGNMENTOPERATION',u'-={EXPR}')
ctx.rule(u'ASSIGNMENTOPERATION',u'*={EXPR}')
ctx.rule(u'ASSIGNMENTOPERATION',u'/={EXPR}')
ctx.rule(u'ASSIGNMENTOPERATION',u'%={EXPR}')
ctx.rule(u'ASSIGNMENTOPERATION',u'**={EXPR}')
ctx.rule(u'ASSIGNMENTOPERATION',u'<<={EXPR}')
ctx.rule(u'ASSIGNMENTOPERATION',u'>>={EXPR}')
ctx.rule(u'ASSIGNMENTOPERATION',u'>>>={EXPR}')
ctx.rule(u'ASSIGNMENTOPERATION',u'&={EXPR}')
ctx.rule(u'ASSIGNMENTOPERATION',u'^={EXPR}')
ctx.rule(u'ASSIGNMENTOPERATION',u'|={EXPR}')
ctx.rule(u'BYTEWISEOPERATION',u'{EXPR} & {EXPR}')
ctx.rule(u'BYTEWISEOPERATION',u'{EXPR} | {EXPR}')
ctx.rule(u'BYTEWISEOPERATION',u'{EXPR} ^ {EXPR}')
ctx.rule(u'BYTEWISEOPERATION',u'~{EXPR}')
ctx.rule(u'BYTEWISEOPERATION',u'{EXPR} << {EXPR}')
ctx.rule(u'BYTEWISEOPERATION',u'{EXPR} >> {EXPR}')
ctx.rule(u'BYTEWISEOPERATION',u'{EXPR} >>> {EXPR}')
ctx.rule(u'COMPARISONOPERATION',u'{EXPR}<{EXPR}')
ctx.rule(u'COMPARISONOPERATION',u'{EXPR}>{EXPR}')
ctx.rule(u'COMPARISONOPERATION',u'{EXPR}<={EXPR}')
ctx.rule(u'COMPARISONOPERATION',u'{EXPR}>={EXPR}')
ctx.rule(u'COMPARISONOPERATION',u'{EXPR}=={EXPR}')
ctx.rule(u'COMPARISONOPERATION',u'{EXPR}==={EXPR}')
ctx.rule(u'COMPARISONOPERATION',u'{EXPR}!={EXPR}')
ctx.rule(u'COMPARISONOPERATION',u'{EXPR}<=>{EXPR}')
ctx.rule(u'COMPARISONOPERATION',u'{EXPR}==={EXPR}')
ctx.rule(u'LOGICALOPERATION',u'{EXPR} && {EXPR}')
ctx.rule(u'LOGICALOPERATION',u'{EXPR} || {EXPR}')
ctx.rule(u'LOGICALOPERATION',u'!{EXPR}')
ctx.rule(u'LITERAL',u'null')
ctx.rule(u'LITERAL',u'{BOOLEAN}')
ctx.rule(u'LITERAL',u'{NUMBER}')
ctx.rule(u'LITERAL',u'{STRING}')
ctx.rule(u'LITERAL',u'{ARRAY}')
ctx.rule(u'LITERAL',u'{REGEX}')
ctx.rule(u'BOOLEAN',u'true')
ctx.rule(u'BOOLEAN',u'false')
ctx.rule(u'BINARYDIGITS',u'0')
ctx.rule(u'BINARYDIGITS',u'1')
ctx.rule(u'BINARYDIGITS',u'1010')
ctx.rule(u'BINARYDIGITS',u'1_11')
ctx.rule(u'BINARYDIGITS',u'10_01')
ctx.rule(u'BINARYDIGITS',u'1111111111111111111111111111111')
ctx.rule(u'BINARYDIGITS',u'101010101110101001011010101')
ctx.rule(u'OCTALDIGITS',u'0')
ctx.rule(u'OCTALDIGITS',u'1')
ctx.rule(u'OCTALDIGITS',u'123')
ctx.rule(u'OCTALDIGITS',u'5_0_2')
ctx.rule(u'OCTALDIGITS',u'324')
ctx.rule(u'OCTALDIGITS',u'5__432')
ctx.rule(u'OCTALDIGITS',u'7777777777777777777777')
ctx.rule(u'OCTALDIGITS',u'1247237465234')
ctx.rule(u'OCTALDIGIT',u'0')
ctx.rule(u'OCTALDIGIT',u'1')
ctx.rule(u'OCTALDIGIT',u'2')
ctx.rule(u'OCTALDIGIT',u'3')
ctx.rule(u'OCTALDIGIT',u'4')
ctx.rule(u'OCTALDIGIT',u'5')
ctx.rule(u'OCTALDIGIT',u'6')
ctx.rule(u'OCTALDIGIT',u'7')
ctx.rule(u'DECIMALDIGITS',u'0')
ctx.rule(u'DECIMALDIGITS',u'1')
ctx.rule(u'DECIMALDIGITS',u'20')
ctx.rule(u'DECIMALDIGITS',u'1234')
ctx.rule(u'DECIMALDIGITS',u'66')
ctx.rule(u'DECIMALDIGITS',u'234_9')
ctx.rule(u'DECIMALDIGITS',u'99999999999999999999')
ctx.rule(u'DECIMALDIGITS',u'12345678123456')
ctx.rule(u'HEXDIGITS',u'0')
ctx.rule(u'HEXDIGITS',u'ABCFDFE0_1203453abcd')
ctx.rule(u'HEXDIGITS',u'1')
ctx.rule(u'HEXDIGITS',u'1234')
ctx.rule(u'HEXDIGITS',u'1asdf')
ctx.rule(u'HEXDIGITS',u'A1')
ctx.rule(u'HEXDIGITS',u'1F_F')
ctx.rule(u'HEXDIGITS',u'4346')
ctx.rule(u'HEXDIGITS',u'FE_D983')
ctx.rule(u'HEXDIGITS',u'FFFFFFFFFF')
ctx.rule(u'HEXDIGIT',u'0')
ctx.rule(u'HEXDIGIT',u'1')
ctx.rule(u'HEXDIGIT',u'2')
ctx.rule(u'HEXDIGIT',u'3')
ctx.rule(u'HEXDIGIT',u'4')
ctx.rule(u'HEXDIGIT',u'5')
ctx.rule(u'HEXDIGIT',u'6')
ctx.rule(u'HEXDIGIT',u'7')
ctx.rule(u'HEXDIGIT',u'8')
ctx.rule(u'HEXDIGIT',u'9')
ctx.rule(u'HEXDIGIT',u'A')
ctx.rule(u'HEXDIGIT',u'B')
ctx.rule(u'HEXDIGIT',u'C')
ctx.rule(u'HEXDIGIT',u'D')
ctx.rule(u'HEXDIGIT',u'E')
ctx.rule(u'HEXDIGIT',u'F')
ctx.rule(u'HEXNUMBER',u'0b{BINARYDIGITS}')
ctx.rule(u'HEXNUMBER',u'0B{BINARYDIGITS}')
ctx.rule(u'EXPONENT',u'e{DECIMALDIGITS}')
ctx.rule(u'EXPONENT',u'e-{DECIMALDIGITS}')
ctx.rule(u'EXPONENT',u'E{DECIMALDIGITS}')
ctx.rule(u'EXPONENT',u'E-{DECIMALDIGITS}')
ctx.rule(u'DECIMALNUMBER',u'{DECIMALDIGITS}')
ctx.rule(u'DECIMALNUMBER',u'0D{DECIMALDIGITS}')
ctx.rule(u'DECIMALNUMBER',u'0d{DECIMALDIGITS}')
ctx.rule(u'HEXNUMBER',u'0x{HEXDIGITS}')
ctx.rule(u'HEXNUMBER',u'0X{HEXDIGITS}')
ctx.rule(u'OCTALNUMBER',u'0O{OCTALDIGITS}')
ctx.rule(u'OCTALNUMBER',u'0o{OCTALDIGITS}')
ctx.rule(u'OCTALNUMBER',u'0{OCTALDIGITS}')
ctx.rule(u'FLOATNUMBER',u'{DECIMALNUMBER}.{DECIMALDIGITS}')
ctx.rule(u'FLOATNUMBER',u'{OCTALNUMBER}.{OCTALDIGITS}')
ctx.rule(u'FLOATNUMBER',u'{HEXNUMBER}.{HEXDIGITS}')
ctx.rule(u'FLOATNUMBER',u'{DECIMALNUMBER}.{DECIMALDIGITS}{EXPONENT}')
ctx.rule(u'FLOATNUMBER',u'{OCTALNUMBER}.{OCTALDIGITS}{EXPONENT}')
ctx.rule(u'FLOATNUMBER',u'{HEXNUMBER}.{HEXDIGITS}{EXPONENT}')
ctx.rule(u'NUMBER',u'{OCTALNUMBER}')
ctx.rule(u'NUMBER',u'{FLOATNUMBER}')
ctx.rule(u'NUMBER',u'{HEXNUMBER}')
ctx.rule(u'NUMBER',u'{DECIMALNUMBER}')
ctx.rule(u'NUMBER',u'0')
ctx.rule(u'NUMBER',u'1')
ctx.rule(u'NUMBER',u'1.00')
ctx.rule(u'NUMBER',u'1/2')
ctx.rule(u'NUMBER',u'1E2')
ctx.rule(u'NUMBER',u'1E02')
ctx.rule(u'NUMBER',u'1E+02')
ctx.rule(u'NUMBER',u'-1')
ctx.rule(u'NUMBER',u'-1.00')
ctx.rule(u'NUMBER',u'-1/2')
ctx.rule(u'NUMBER',u'-1E2')
ctx.rule(u'NUMBER',u'-1E02')
ctx.rule(u'NUMBER',u'-1E+02')
ctx.rule(u'NUMBER',u'1/0')
ctx.rule(u'NUMBER',u'0/0')
ctx.rule(u'NUMBER',u'-2147483648/-1')
ctx.rule(u'NUMBER',u'-9223372036854775808/-1')
ctx.rule(u'NUMBER',u'-0')
ctx.rule(u'NUMBER',u'-0.0')
ctx.rule(u'NUMBER',u'+0')
ctx.rule(u'NUMBER',u'+0.0')
ctx.rule(u'NUMBER',u'0.00')
ctx.rule(u'NUMBER',u'.')
ctx.rule(u'NUMBER',u'0,00')
ctx.rule(u'NUMBER',u'0.0/0')
ctx.rule(u'NUMBER',u'1.0/0.0')
ctx.rule(u'NUMBER',u'0.0/0.0')
ctx.rule(u'NUMBER',u'1,0/0,0')
ctx.rule(u'NUMBER',u'0,0/0,0')
ctx.rule(u'NUMBER',u'--1')
ctx.rule(u'NUMBER',u'999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999')
ctx.rule(u'NUMBER',u'0x0')
ctx.rule(u'NUMBER',u'0xffffffff')
ctx.rule(u'NUMBER',u'0xffffffffffffffff')
ctx.rule(u'NUMBER',u'0xabad1dea')
ctx.rule(u'NUMBER',u'123456789012345678901234567890123456789')
ctx.rule(u'NUMBER',u'1000.00')
ctx.rule(u'NUMBER',u'1000000.00')
ctx.rule(u'NUMBER',u'1000.00')
ctx.rule(u'NUMBER',u'100000.000')
ctx.rule(u'NUMBER',u'100000000')
ctx.rule(u'NUMBER',u'01000')
ctx.rule(u'NUMBER',u'08')
ctx.rule(u'NUMBER',u'09')
ctx.rule(u'NUMBER',u'2.2250738585072011e-308')
ctx.rule(u'DOUBLEQUOTEDWORD',u'{NAUGHTYSTRING}')
ctx.rule(u'DOUBLEQUOTEDSTRING',u'{DOUBLEQUOTEDWORD}')
ctx.rule(u'DOUBLEQUOTEDSTRING',u' {DOUBLEQUOTEDSTRING}')
ctx.rule(u'DOUBLEQUOTEDSTRING',u'{NUMBER}{DOUBLEQUOTEDSTRING}')
ctx.rule(u'DOUBLEQUOTEDSTRING',u'{ESCAPEDCHARACTERS}{DOUBLEQUOTEDSTRING}')
ctx.rule(u'DOUBLEQUOTEDSTRING',u'#\\{{EXPR}\\}{DOUBLEQUOTEDSTRING}')
ctx.rule(u'DOUBLEQUOTEDSTRING',u'')
ctx.rule(u'TEMPLATESTRING',u'{DOUBLEQUOTEDSTRING}$\\{{EXPR}\\}{TEMPLATESTRING}')
ctx.rule(u'TEMPLATESTRING',u'')
ctx.rule(u'STRING',u'"{DOUBLEQUOTEDSTRING}"')
ctx.rule(u'STRING',u"'{DOUBLEQUOTEDSTRING}'")
ctx.rule(u'STRING',u'`{TEMPLATESTRING}`')
ctx.rule(u'ARRAY',u'[{ARRAYCONTENT}]')
ctx.rule(u'ARRAY',u'[]')
ctx.rule(u'ARRAYCONTENT',u'{EXPR}, {ARRAYCONTENT}')
ctx.rule(u'ARRAYCONTENT',u'{EXPR}')
ctx.rule(u'REGEX',u'/{REGEXPATTERN}/')
ctx.rule(u'REGEX',u'/{REGEXPATTERN}/g')
ctx.rule(u'REGEX',u'/{REGEXPATTERN}/i')
ctx.rule(u'REGEX',u'/{REGEXPATTERN}/m')
ctx.rule(u'REGEX',u'/{REGEXPATTERN}/y')
ctx.rule(u'REGEXPATTERN',u'{DOUBLEQUOTEDSTRING}')
ctx.rule(u'ESCAPEDCHARACTERS',u'\\\\')
ctx.rule(u'ESCAPEDCHARACTERS',u"\\'")
ctx.rule(u'ESCAPEDCHARACTERS',u'\\"')
ctx.rule(u'ESCAPEDCHARACTERS',u'\\0')
ctx.rule(u'ESCAPEDCHARACTERS',u'\\a')
ctx.rule(u'ESCAPEDCHARACTERS',u'\\b')
ctx.rule(u'ESCAPEDCHARACTERS',u'\\f')
ctx.rule(u'ESCAPEDCHARACTERS',u'\\n')
ctx.rule(u'ESCAPEDCHARACTERS',u'\\r')
ctx.rule(u'ESCAPEDCHARACTERS',u'\\#')
ctx.rule(u'ESCAPEDCHARACTERS',u'\\t')
ctx.rule(u'ESCAPEDCHARACTERS',u'\\u{HEXDIGIT}{HEXDIGIT}{HEXDIGIT}{HEXDIGIT}')
ctx.rule(u'ESCAPEDCHARACTERS',u'\\v')
ctx.rule(u'ESCAPEDCHARACTERS',u'\\0{OCTALDIGIT}{OCTALDIGIT}')
ctx.rule(u'ESCAPEDCHARACTERS',u'\\x{HEXDIGIT}{HEXDIGIT}')
ctx.rule(u'NAUGHTYSTRING',u'undefined')
ctx.rule(u'NAUGHTYSTRING',u'undef')
ctx.rule(u'NAUGHTYSTRING',u'en-US')
ctx.rule(u'NAUGHTYSTRING',u'year')
ctx.rule(u'NAUGHTYSTRING',u'null')
ctx.rule(u'NAUGHTYSTRING',u'NULL')
ctx.rule(u'NAUGHTYSTRING',u'(null)')
ctx.rule(u'NAUGHTYSTRING',u'nil')
ctx.rule(u'NAUGHTYSTRING',u'NIL')
ctx.rule(u'NAUGHTYSTRING',u'true')
ctx.rule(u'NAUGHTYSTRING',u'false')
ctx.rule(u'NAUGHTYSTRING',u'True')
ctx.rule(u'NAUGHTYSTRING',u'False')
ctx.rule(u'NAUGHTYSTRING',u'TRUE')
ctx.rule(u'NAUGHTYSTRING',u'FALSE')
ctx.rule(u'NAUGHTYSTRING',u'None')
ctx.rule(u'NAUGHTYSTRING',u'hasOwnProperty')
ctx.rule(u'NAUGHTYSTRING',u",./;'[]\\-=")
ctx.rule(u'NAUGHTYSTRING',u'<>?:"{}|_+')
ctx.rule(u'NAUGHTYSTRING',u'!@#$%^&*()`~')
ctx.rule(u'NAUGHTYSTRING',u'\x01\x02\x03\x04\x05\x06\x07\x08\x0e\x0f\x10\x11\x12\x13\x14\x15\x16\x17\x18\x19\x1a\x1b\x1c\x1d\x1e\x1f\x7f')
ctx.rule(u'NAUGHTYSTRING',u'\x80\x81\x82\x83\x84\x86\x87\x88\x89\x8a\x8b\x8c\x8d\x8e\x8f\x90\x91\x92\x93\x94\x95\x96\x97\x98\x99\x9a\x9b\x9c\x9d\x9e\x9f')
ctx.rule(u'NAUGHTYSTRING',u'\t\x0b\x0c\x85 \u1680\u2002\u2003\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u200b\u2028\u2029\u202f\u205f\u3000')
ctx.rule(u'NAUGHTYSTRING',u'\xad\u0600\u0601\u0602\u0603\u0604\u0605\u061c\u06dd\u070f\u180e\u200b\u200c\u200d\u200e\u200f\u202a\u202b\u202c\u202d\u202e\u2060\u2061\u2062\u2063\u2064\u2066\u2067\u2068\u2069\u206a\u206b\u206c\u206d\u206e\u206f\ufeff\ufff9\ufffa\ufffb\U000110bd\U0001bca0\U0001bca1\U0001bca2\U0001bca3\U0001d173\U0001d174\U0001d175\U0001d176\U0001d177\U0001d178\U0001d179\U0001d17a\U000e0001\U000e0020\U000e0021\U000e0022\U000e0023\U000e0024\U000e0025\U000e0026\U000e0027\U000e0028\U000e0029\U000e002a\U000e002b\U000e002c\U000e002d\U000e002e\U000e002f\U000e0030\U000e0031\U000e0032\U000e0033\U000e0034\U000e0035\U000e0036\U000e0037\U000e0038\U000e0039\U000e003a\U000e003b\U000e003c\U000e003d\U000e003e\U000e003f\U000e0040\U000e0041\U000e0042\U000e0043\U000e0044\U000e0045\U000e0046\U000e0047\U000e0048\U000e0049\U000e004a\U000e004b\U000e004c\U000e004d\U000e004e\U000e004f\U000e0050\U000e0051\U000e0052\U000e0053\U000e0054\U000e0055\U000e0056\U000e0057\U000e0058\U000e0059\U000e005a\U000e005b\U000e005c\U000e005d\U000e005e\U000e005f\U000e0060\U000e0061\U000e0062\U000e0063\U000e0064\U000e0065\U000e0066\U000e0067\U000e0068\U000e0069\U000e006a\U000e006b\U000e006c\U000e006d\U000e006e\U000e006f\U000e0070\U000e0071\U000e0072\U000e0073\U000e0074\U000e0075\U000e0076\U000e0077\U000e0078\U000e0079\U000e007a\U000e007b\U000e007c\U000e007d\U000e007e\U000e007f')
ctx.rule(u'NAUGHTYSTRING',u'\ufeff')
ctx.rule(u'NAUGHTYSTRING',u'\ufffe')
ctx.rule(u'NAUGHTYSTRING',u'\u03a9\u2248\xe7\u221a\u222b\u02dc\xb5\u2264\u2265\xf7')
ctx.rule(u'NAUGHTYSTRING',u'\xe5\xdf\u2202\u0192\xa9\u02d9\u2206\u02da\xac\u2026\xe6')
ctx.rule(u'NAUGHTYSTRING',u'\u0153\u2211\xb4\xae\u2020\xa5\xa8\u02c6\xf8\u03c0\u201c\u2018')
ctx.rule(u'NAUGHTYSTRING',u'\xa1\u2122\xa3\xa2\u221e\xa7\xb6\u2022\xaa\xba\u2013\u2260')
ctx.rule(u'NAUGHTYSTRING',u'\xb8\u02db\xc7\u25ca\u0131\u02dc\xc2\xaf\u02d8\xbf')
ctx.rule(u'NAUGHTYSTRING',u'\xc5\xcd\xce\xcf\u02dd\xd3\xd4\uf8ff\xd2\xda\xc6\u2603')
ctx.rule(u'NAUGHTYSTRING',u'\u0152\u201e\xb4\u2030\u02c7\xc1\xa8\u02c6\xd8\u220f\u201d\u2019')
ctx.rule(u'NAUGHTYSTRING',u'`\u2044\u20ac\u2039\u203a\ufb01\ufb02\u2021\xb0\xb7\u201a\u2014\xb1')
ctx.rule(u'NAUGHTYSTRING',u'\u215b\u215c\u215d\u215e')
ctx.rule(u'NAUGHTYSTRING',u'\u0401\u0402\u0403\u0404\u0405\u0406\u0407\u0408\u0409\u040a\u040b\u040c\u040d\u040e\u040f\u0410\u0411\u0412\u0413\u0414\u0415\u0416\u0417\u0418\u0419\u041a\u041b\u041c\u041d\u041e\u041f\u0420\u0421\u0422\u0423\u0424\u0425\u0426\u0427\u0428\u0429\u042a\u042b\u042c\u042d\u042e\u042f\u0430\u0431\u0432\u0433\u0434\u0435\u0436\u0437\u0438\u0439\u043a\u043b\u043c\u043d\u043e\u043f\u0440\u0441\u0442\u0443\u0444\u0445\u0446\u0447\u0448\u0449\u044a\u044b\u044c\u044d\u044e\u044f')
ctx.rule(u'NAUGHTYSTRING',u'\u0660\u0661\u0662\u0663\u0664\u0665\u0666\u0667\u0668\u0669')
ctx.rule(u'NAUGHTYSTRING',u'\u2070\u2074\u2075')
ctx.rule(u'NAUGHTYSTRING',u'\u2080\u2081\u2082')
ctx.rule(u'NAUGHTYSTRING',u'\u2070\u2074\u2075\u2080\u2081\u2082')
ctx.rule(u'NAUGHTYSTRING',u'\u0e14\u0e49\u0e49\u0e49\u0e49\u0e49\u0e47\u0e47\u0e47\u0e47\u0e47\u0e49\u0e49\u0e49\u0e49\u0e49\u0e47\u0e47\u0e47\u0e47\u0e47\u0e49\u0e49\u0e49\u0e49\u0e49\u0e49\u0e49\u0e49\u0e47\u0e47\u0e47\u0e47\u0e47\u0e49\u0e49\u0e49\u0e49\u0e49\u0e47\u0e47\u0e47\u0e47\u0e47\u0e49\u0e49\u0e49\u0e49\u0e49\u0e49\u0e49\u0e49\u0e47\u0e47\u0e47\u0e47\u0e47\u0e49\u0e49\u0e49\u0e49\u0e49\u0e47\u0e47\u0e47\u0e47\u0e47\u0e49\u0e49\u0e49\u0e49\u0e49\u0e49\u0e49\u0e49\u0e47\u0e47\u0e47\u0e47\u0e47\u0e49\u0e49\u0e49\u0e49\u0e49\u0e47\u0e47\u0e47\u0e47 \u0e14\u0e49\u0e49\u0e49\u0e49\u0e49\u0e47\u0e47\u0e47\u0e47\u0e47\u0e49\u0e49\u0e49\u0e49\u0e49\u0e47\u0e47\u0e47\u0e47\u0e47\u0e49\u0e49\u0e49\u0e49\u0e49\u0e49\u0e49\u0e49\u0e47\u0e47\u0e47\u0e47\u0e47\u0e49\u0e49\u0e49\u0e49\u0e49\u0e47\u0e47\u0e47\u0e47\u0e47\u0e49\u0e49\u0e49\u0e49\u0e49\u0e49\u0e49\u0e49\u0e47\u0e47\u0e47\u0e47\u0e47\u0e49\u0e49\u0e49\u0e49\u0e49\u0e47\u0e47\u0e47\u0e47\u0e47\u0e49\u0e49\u0e49\u0e49\u0e49\u0e49\u0e49\u0e49\u0e47\u0e47\u0e47\u0e47\u0e47\u0e49\u0e49\u0e49\u0e49\u0e49\u0e47\u0e47\u0e47\u0e47 \u0e14\u0e49\u0e49\u0e49\u0e49\u0e49\u0e47\u0e47\u0e47\u0e47\u0e47\u0e49\u0e49\u0e49\u0e49\u0e49\u0e47\u0e47\u0e47\u0e47\u0e47\u0e49\u0e49\u0e49\u0e49\u0e49\u0e49\u0e49\u0e49\u0e47\u0e47\u0e47\u0e47\u0e47\u0e49\u0e49\u0e49\u0e49\u0e49\u0e47\u0e47\u0e47\u0e47\u0e47\u0e49\u0e49\u0e49\u0e49\u0e49\u0e49\u0e49\u0e49\u0e47\u0e47\u0e47\u0e47\u0e47\u0e49\u0e49\u0e49\u0e49\u0e49\u0e47\u0e47\u0e47\u0e47\u0e47\u0e49\u0e49\u0e49\u0e49\u0e49\u0e49\u0e49\u0e49\u0e47\u0e47\u0e47\u0e47\u0e47\u0e49\u0e49\u0e49\u0e49\u0e49\u0e47\u0e47\u0e47\u0e47')
ctx.rule(u'NAUGHTYSTRING',u'\'"\'')
ctx.rule(u'NAUGHTYSTRING',u'"\'\'\'\'"\'"')
ctx.rule(u'NAUGHTYSTRING',u'"\'"\'"\'\'\'\'"')
ctx.rule(u'NAUGHTYSTRING',u'\u7530\u4e2d\u3055\u3093\u306b\u3042\u3052\u3066\u4e0b\u3055\u3044')
ctx.rule(u'NAUGHTYSTRING',u'\u30d1\u30fc\u30c6\u30a3\u30fc\u3078\u884c\u304b\u306a\u3044\u304b')
ctx.rule(u'NAUGHTYSTRING',u'\u548c\u88fd\u6f22\u8a9e')
ctx.rule(u'NAUGHTYSTRING',u'\u90e8\u843d\u683c')
ctx.rule(u'NAUGHTYSTRING',u'\uc0ac\ud68c\uacfc\ud559\uc6d0 \uc5b4\ud559\uc5f0\uad6c\uc18c')
ctx.rule(u'NAUGHTYSTRING',u'\ucc26\ucc28\ub97c \ud0c0\uace0 \uc628 \ud3b2\uc2dc\ub9e8\uacfc \uc45b\ub2e4\ub9ac \ub620\ubc29\uac01\ud558')
ctx.rule(u'NAUGHTYSTRING',u'\u793e\u6703\u79d1\u5b78\u9662\u8a9e\u5b78\u7814\u7a76\u6240')
ctx.rule(u'NAUGHTYSTRING',u'\uc6b8\ub780\ubc14\ud1a0\ub974')
ctx.rule(u'NAUGHTYSTRING',u'\U0002070e\U00020731\U00020779\U00020c53\U00020c78\U00020c96\U00020ccf')
ctx.rule(u'NAUGHTYSTRING',u'\u023a')
ctx.rule(u'NAUGHTYSTRING',u'\u023e')
ctx.rule(u'NAUGHTYSTRING',u'\u30fd\u0f3c\u0e88\u0644\u035c\u0e88\u0f3d\uff89 \u30fd\u0f3c\u0e88\u0644\u035c\u0e88\u0f3d\uff89 ')
ctx.rule(u'NAUGHTYSTRING',u'(\uff61\u25d5 \u2200 \u25d5\uff61)')
ctx.rule(u'NAUGHTYSTRING',u'\uff40\uff68(\xb4\u2200\uff40\u2229')
ctx.rule(u'NAUGHTYSTRING',u'__\uff9b(,_,*)')
ctx.rule(u'NAUGHTYSTRING',u'\u30fb(\uffe3\u2200\uffe3)\u30fb:*:')
ctx.rule(u'NAUGHTYSTRING',u'\uff9f\uff65\u273f\u30fe\u2572(\uff61\u25d5\u203f\u25d5\uff61)\u2571\u273f\uff65\uff9f')
ctx.rule(u'NAUGHTYSTRING',u',\u3002\u30fb:*:\u30fb\u309c\u2019( \u263b \u03c9 \u263b )\u3002\u30fb:*:\u30fb\u309c\u2019')
ctx.rule(u'NAUGHTYSTRING',u'(\u256f\xb0\u25a1\xb0\uff09\u256f\ufe35 \u253b\u2501\u253b)')
ctx.rule(u'NAUGHTYSTRING',u'(\uff89\u0ca5\u76ca\u0ca5\uff09\uff89\ufeff \u253b\u2501\u253b')
ctx.rule(u'NAUGHTYSTRING',u'\u252c\u2500\u252c\u30ce( \xba _ \xba\u30ce)')
ctx.rule(u'NAUGHTYSTRING',u'( \u0361\xb0 \u035c\u0296 \u0361\xb0)')
ctx.rule(u'NAUGHTYSTRING',u'\U0001f60d')
ctx.rule(u'NAUGHTYSTRING',u'\U0001f469\U0001f3fd')
ctx.rule(u'NAUGHTYSTRING',u'\U0001f47e \U0001f647 \U0001f481 \U0001f645 \U0001f646 \U0001f64b \U0001f64e \U0001f64d')
ctx.rule(u'NAUGHTYSTRING',u'\U0001f435 \U0001f648 \U0001f649 \U0001f64a')
ctx.rule(u'NAUGHTYSTRING',u'\u2764\ufe0f \U0001f494 \U0001f48c \U0001f495 \U0001f49e \U0001f493 \U0001f497 \U0001f496 \U0001f498 \U0001f49d \U0001f49f \U0001f49c \U0001f49b \U0001f49a \U0001f499')
ctx.rule(u'NAUGHTYSTRING',u'\u270b\U0001f3ff \U0001f4aa\U0001f3ff \U0001f450\U0001f3ff \U0001f64c\U0001f3ff \U0001f44f\U0001f3ff \U0001f64f\U0001f3ff')
ctx.rule(u'NAUGHTYSTRING',u'\U0001f6be \U0001f192 \U0001f193 \U0001f195 \U0001f196 \U0001f197 \U0001f199 \U0001f3e7')
ctx.rule(u'NAUGHTYSTRING',u'0\ufe0f\u20e3 1\ufe0f\u20e3 2\ufe0f\u20e3 3\ufe0f\u20e3 4\ufe0f\u20e3 5\ufe0f\u20e3 6\ufe0f\u20e3 7\ufe0f\u20e3 8\ufe0f\u20e3 9\ufe0f\u20e3 \U0001f51f')
ctx.rule(u'NAUGHTYSTRING',u'\U0001f1fa\U0001f1f8\U0001f1f7\U0001f1fa\U0001f1f8 \U0001f1e6\U0001f1eb\U0001f1e6\U0001f1f2\U0001f1f8')
ctx.rule(u'NAUGHTYSTRING',u'\U0001f1fa\U0001f1f8\U0001f1f7\U0001f1fa\U0001f1f8\U0001f1e6\U0001f1eb\U0001f1e6\U0001f1f2')
ctx.rule(u'NAUGHTYSTRING',u'\U0001f1fa\U0001f1f8\U0001f1f7\U0001f1fa\U0001f1f8\U0001f1e6')
ctx.rule(u'NAUGHTYSTRING',u'\uff11\uff12\uff13')
ctx.rule(u'NAUGHTYSTRING',u'\u0661\u0662\u0663')
ctx.rule(u'NAUGHTYSTRING',u'\u062b\u0645 \u0646\u0641\u0633 \u0633\u0642\u0637\u062a \u0648\u0628\u0627\u0644\u062a\u062d\u062f\u064a\u062f\u060c, \u062c\u0632\u064a\u0631\u062a\u064a \u0628\u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0623\u0646 \u062f\u0646\u0648. \u0625\u0630 \u0647\u0646\u0627\u061f \u0627\u0644\u0633\u062a\u0627\u0631 \u0648\u062a\u0646\u0635\u064a\u0628 \u0643\u0627\u0646. \u0623\u0647\u0651\u0644 \u0627\u064a\u0637\u0627\u0644\u064a\u0627\u060c \u0628\u0631\u064a\u0637\u0627\u0646\u064a\u0627-\u0641\u0631\u0646\u0633\u0627 \u0642\u062f \u0623\u062e\u0630. \u0633\u0644\u064a\u0645\u0627\u0646\u060c \u0625\u062a\u0641\u0627\u0642\u064a\u0629 \u0628\u064a\u0646 \u0645\u0627, \u064a\u0630\u0643\u0631 \u0627\u0644\u062d\u062f\u0648\u062f \u0623\u064a \u0628\u0639\u062f, \u0645\u0639\u0627\u0645\u0644\u0629 \u0628\u0648\u0644\u0646\u062f\u0627\u060c \u0627\u0644\u0625\u0637\u0644\u0627\u0642 \u0639\u0644 \u0625\u064a\u0648.')
ctx.rule(u'NAUGHTYSTRING',u'\u05d1\u05b0\u05bc\u05e8\u05b5\u05d0\u05e9\u05b4\u05c1\u05d9\u05ea, \u05d1\u05b8\u05bc\u05e8\u05b8\u05d0 \u05d0\u05b1\u05dc\u05b9\u05d4\u05b4\u05d9\u05dd, \u05d0\u05b5\u05ea \u05d4\u05b7\u05e9\u05b8\u05bc\u05c1\u05de\u05b7\u05d9\u05b4\u05dd, \u05d5\u05b0\u05d0\u05b5\u05ea \u05d4\u05b8\u05d0\u05b8\u05e8\u05b6\u05e5')
ctx.rule(u'NAUGHTYSTRING',u'\u05d4\u05b8\u05d9\u05b0\u05ea\u05b8\u05d4test\u0627\u0644\u0635\u0641\u062d\u0627\u062a \u0627\u0644\u062a\u0651\u062d\u0648\u0644')
ctx.rule(u'NAUGHTYSTRING',u'\ufdfd')
ctx.rule(u'NAUGHTYSTRING',u'\ufdfa')
ctx.rule(u'NAUGHTYSTRING',u'\u0645\u064f\u0646\u064e\u0627\u0642\u064e\u0634\u064e\u0629\u064f \u0633\u064f\u0628\u064f\u0644\u0650 \u0627\u0650\u0633\u0652\u062a\u0650\u062e\u0652\u062f\u064e\u0627\u0645\u0650 \u0627\u0644\u0644\u064f\u0651\u063a\u064e\u0629\u0650 \u0641\u0650\u064a \u0627\u0644\u0646\u064f\u0651\u0638\u064f\u0645\u0650 \u0627\u0644\u0652\u0642\u064e\u0627\u0626\u0650\u0645\u064e\u0629\u0650 \u0648\u064e\u0641\u0650\u064a\u0645 \u064a\u064e\u062e\u064f\u0635\u064e\u0651 \u0627\u0644\u062a\u064e\u0651\u0637\u0652\u0628\u0650\u064a\u0642\u064e\u0627\u062a\u064f \u0627\u0644\u0652\u062d\u0627\u0633\u064f\u0648\u0628\u0650\u064a\u064e\u0651\u0629\u064f\u060c ')
ctx.rule(u'NAUGHTYSTRING',u'\u200b')
ctx.rule(u'NAUGHTYSTRING',u'\u1680')
ctx.rule(u'NAUGHTYSTRING',u'\u180e')
ctx.rule(u'NAUGHTYSTRING',u'\u3000')
ctx.rule(u'NAUGHTYSTRING',u'\ufeff')
ctx.rule(u'NAUGHTYSTRING',u'\u2423')
ctx.rule(u'NAUGHTYSTRING',u'\u2422')
ctx.rule(u'NAUGHTYSTRING',u'\u2421')
ctx.rule(u'NAUGHTYSTRING',u'\u202a\u202atest\u202a')
ctx.rule(u'NAUGHTYSTRING',u'\u202btest\u202b')
ctx.rule(u'NAUGHTYSTRING',u'\u2029test\u2029')
ctx.rule(u'NAUGHTYSTRING',u'test\u2060test\u202b')
ctx.rule(u'NAUGHTYSTRING',u'\u2066test\u2067')
ctx.rule(u'NAUGHTYSTRING',u'\u1e70\u033a\u033a\u0315o\u035e \u0337i\u0332\u032c\u0347\u032a\u0359n\u031d\u0317\u0355v\u031f\u031c\u0318\u0326\u035fo\u0336\u0319\u0330\u0320k\xe8\u035a\u032e\u033a\u032a\u0339\u0331\u0324 \u0316t\u031d\u0355\u0333\u0323\u033b\u032a\u035eh\u033c\u0353\u0332\u0326\u0333\u0318\u0332e\u0347\u0323\u0330\u0326\u032c\u034e \u0322\u033c\u033b\u0331\u0318h\u035a\u034e\u0359\u031c\u0323\u0332\u0345i\u0326\u0332\u0323\u0330\u0324v\u033b\u034de\u033a\u032d\u0333\u032a\u0330-m\u0322i\u0345n\u0316\u033a\u031e\u0332\u032f\u0330d\u0335\u033c\u031f\u0359\u0329\u033c\u0318\u0333 \u031e\u0325\u0331\u0333\u032dr\u031b\u0317\u0318e\u0359p\u0360r\u033c\u031e\u033b\u032d\u0317e\u033a\u0320\u0323\u035fs\u0318\u0347\u0333\u034d\u031d\u0349e\u0349\u0325\u032f\u031e\u0332\u035a\u032c\u035c\u01f9\u032c\u034e\u034e\u031f\u0316\u0347\u0324t\u034d\u032c\u0324\u0353\u033c\u032d\u0358\u0345i\u032a\u0331n\u0360g\u0334\u0349 \u034f\u0349\u0345c\u032c\u031fh\u0361a\u032b\u033b\u032f\u0358o\u032b\u031f\u0316\u034d\u0319\u031d\u0349s\u0317\u0326\u0332.\u0328\u0339\u0348\u0323')
ctx.rule(u'NAUGHTYSTRING',u'\u0321\u0353\u031e\u0345I\u0317\u0318\u0326\u035dn\u0347\u0347\u0359v\u032e\u032bok\u0332\u032b\u0319\u0348i\u0316\u0359\u032d\u0339\u0320\u031en\u0321\u033b\u032e\u0323\u033ag\u0332\u0348\u0359\u032d\u0359\u032c\u034e \u0330t\u0354\u0326h\u031e\u0332e\u0322\u0324 \u034d\u032c\u0332\u0356f\u0334\u0318\u0355\u0323\xe8\u0356\u1eb9\u0325\u0329l\u0356\u0354\u035ai\u0353\u035a\u0326\u0360n\u0356\u034d\u0317\u0353\u0333\u032eg\u034d \u0328o\u035a\u032a\u0361f\u0318\u0323\u032c \u0316\u0318\u0356\u031f\u0359\u032ec\u0489\u0354\u032b\u0356\u0353\u0347\u0356\u0345h\u0335\u0324\u0323\u035a\u0354\xe1\u0317\u033c\u0355\u0345o\u033c\u0323\u0325s\u0331\u0348\u033a\u0316\u0326\u033b\u0362.\u031b\u0316\u031e\u0320\u032b\u0330')
ctx.rule(u'NAUGHTYSTRING',u'\u0317\u033a\u0356\u0339\u032f\u0353\u1e6e\u0324\u034d\u0325\u0347\u0348h\u0332\u0301e\u034f\u0353\u033c\u0317\u0319\u033c\u0323\u0354 \u0347\u031c\u0331\u0320\u0353\u034d\u0345N\u0355\u0360e\u0317\u0331z\u0318\u031d\u031c\u033a\u0359p\u0324\u033a\u0339\u034d\u032f\u035ae\u0320\u033b\u0320\u035cr\u0328\u0324\u034d\u033a\u0316\u0354\u0316\u0316d\u0320\u031f\u032d\u032c\u031d\u035fi\u0326\u0356\u0329\u0353\u0354\u0324a\u0320\u0317\u032c\u0349\u0319n\u035a\u035c \u033b\u031e\u0330\u035a\u0345h\u0335\u0349i\u0333\u031ev\u0322\u0347\u1e19\u034e\u035f-\u0489\u032d\u0329\u033c\u0354m\u0324\u032d\u032bi\u0355\u0347\u031d\u0326n\u0317\u0359\u1e0d\u031f \u032f\u0332\u0355\u035e\u01eb\u031f\u032f\u0330\u0332\u0359\u033b\u031df \u032a\u0330\u0330\u0317\u0316\u032d\u0318\u0358c\u0326\u034d\u0332\u031e\u034d\u0329\u0319\u1e25\u035aa\u032e\u034e\u031f\u0319\u035c\u01a1\u0329\u0339\u034es\u0324.\u031d\u031d \u0489Z\u0321\u0316\u031c\u0356\u0330\u0323\u0349\u031ca\u0356\u0330\u0359\u032c\u0361l\u0332\u032b\u0333\u034d\u0329g\u0321\u031f\u033c\u0331\u035a\u031e\u032c\u0345o\u0317\u035c.\u031f')
ctx.rule(u'NAUGHTYSTRING',u'\u0326H\u032c\u0324\u0317\u0324\u035de\u035c \u031c\u0325\u031d\u033b\u034d\u031f\u0301w\u0315h\u0316\u032f\u0353o\u031d\u0359\u0316\u034e\u0331\u032e \u0489\u033a\u0319\u031e\u031f\u0348W\u0337\u033c\u032da\u033a\u032a\u034d\u012f\u0348\u0355\u032d\u0359\u032f\u031ct\u0336\u033c\u032es\u0318\u0359\u0356\u0315 \u0320\u032b\u0320B\u033b\u034d\u0359\u0349\u0333\u0345e\u0335h\u0335\u032c\u0347\u032b\u0359i\u0339\u0353\u0333\u0333\u032e\u034e\u032b\u0315n\u035fd\u0334\u032a\u031c\u0316 \u0330\u0349\u0329\u0347\u0359\u0332\u035e\u0345T\u0356\u033c\u0353\u032a\u0362h\u034f\u0353\u032e\u033be\u032c\u031d\u031f\u0345 \u0324\u0339\u031dW\u0359\u031e\u031d\u0354\u0347\u035d\u0345a\u034f\u0353\u0354\u0339\u033c\u0323l\u0334\u0354\u0330\u0324\u031f\u0354\u1e3d\u032b.\u0355')
ctx.rule(u'NAUGHTYSTRING',u'Z\u032e\u031e\u0320\u0359\u0354\u0345\u1e00\u0317\u031e\u0348\u033b\u0317\u1e36\u0359\u034e\u032f\u0339\u031e\u0353G\u033bO\u032d\u0317\u032e')
ctx.rule(u'NAUGHTYSTRING',u"\u02d9\u0250nb\u1d09l\u0250 \u0250u\u0183\u0250\u026f \u01dd\u0279olop \u0287\u01dd \u01dd\u0279oq\u0250l \u0287n \u0287unp\u1d09p\u1d09\u0254u\u1d09 \u0279od\u026f\u01dd\u0287 po\u026fsn\u1d09\u01dd op p\u01dds '\u0287\u1d09l\u01dd \u0183u\u1d09\u0254s\u1d09d\u1d09p\u0250 \u0279n\u0287\u01dd\u0287\u0254\u01ddsuo\u0254 '\u0287\u01dd\u026f\u0250 \u0287\u1d09s \u0279olop \u026fnsd\u1d09 \u026f\u01dd\u0279o\u02e5")
ctx.rule(u'NAUGHTYSTRING',u'00\u02d9\u0196$-')
ctx.rule(u'NAUGHTYSTRING',u'\uff34\uff48\uff45 \uff51\uff55\uff49\uff43\uff4b \uff42\uff52\uff4f\uff57\uff4e \uff46\uff4f\uff58 \uff4a\uff55\uff4d\uff50\uff53 \uff4f\uff56\uff45\uff52 \uff54\uff48\uff45 \uff4c\uff41\uff5a\uff59 \uff44\uff4f\uff47')
ctx.rule(u'NAUGHTYSTRING',u'\U0001d413\U0001d421\U0001d41e \U0001d42a\U0001d42e\U0001d422\U0001d41c\U0001d424 \U0001d41b\U0001d42b\U0001d428\U0001d430\U0001d427 \U0001d41f\U0001d428\U0001d431 \U0001d423\U0001d42e\U0001d426\U0001d429\U0001d42c \U0001d428\U0001d42f\U0001d41e\U0001d42b \U0001d42d\U0001d421\U0001d41e \U0001d425\U0001d41a\U0001d433\U0001d432 \U0001d41d\U0001d428\U0001d420')
ctx.rule(u'NAUGHTYSTRING',u'\U0001d57f\U0001d58d\U0001d58a \U0001d596\U0001d59a\U0001d58e\U0001d588\U0001d590 \U0001d587\U0001d597\U0001d594\U0001d59c\U0001d593 \U0001d58b\U0001d594\U0001d59d \U0001d58f\U0001d59a\U0001d592\U0001d595\U0001d598 \U0001d594\U0001d59b\U0001d58a\U0001d597 \U0001d599\U0001d58d\U0001d58a \U0001d591\U0001d586\U0001d59f\U0001d59e \U0001d589\U0001d594\U0001d58c')
ctx.rule(u'NAUGHTYSTRING',u'\U0001d47b\U0001d489\U0001d486 \U0001d492\U0001d496\U0001d48a\U0001d484\U0001d48c \U0001d483\U0001d493\U0001d490\U0001d498\U0001d48f \U0001d487\U0001d490\U0001d499 \U0001d48b\U0001d496\U0001d48e\U0001d491\U0001d494 \U0001d490\U0001d497\U0001d486\U0001d493 \U0001d495\U0001d489\U0001d486 \U0001d48d\U0001d482\U0001d49b\U0001d49a \U0001d485\U0001d490\U0001d488')
ctx.rule(u'NAUGHTYSTRING',u'\U0001d4e3\U0001d4f1\U0001d4ee \U0001d4fa\U0001d4fe\U0001d4f2\U0001d4ec\U0001d4f4 \U0001d4eb\U0001d4fb\U0001d4f8\U0001d500\U0001d4f7 \U0001d4ef\U0001d4f8\U0001d501 \U0001d4f3\U0001d4fe\U0001d4f6\U0001d4f9\U0001d4fc \U0001d4f8\U0001d4ff\U0001d4ee\U0001d4fb \U0001d4fd\U0001d4f1\U0001d4ee \U0001d4f5\U0001d4ea\U0001d503\U0001d502 \U0001d4ed\U0001d4f8\U0001d4f0')
ctx.rule(u'NAUGHTYSTRING',u'\U0001d54b\U0001d559\U0001d556 \U0001d562\U0001d566\U0001d55a\U0001d554\U0001d55c \U0001d553\U0001d563\U0001d560\U0001d568\U0001d55f \U0001d557\U0001d560\U0001d569 \U0001d55b\U0001d566\U0001d55e\U0001d561\U0001d564 \U0001d560\U0001d567\U0001d556\U0001d563 \U0001d565\U0001d559\U0001d556 \U0001d55d\U0001d552\U0001d56b\U0001d56a \U0001d555\U0001d560\U0001d558')
ctx.rule(u'NAUGHTYSTRING',u'\U0001d683\U0001d691\U0001d68e \U0001d69a\U0001d69e\U0001d692\U0001d68c\U0001d694 \U0001d68b\U0001d69b\U0001d698\U0001d6a0\U0001d697 \U0001d68f\U0001d698\U0001d6a1 \U0001d693\U0001d69e\U0001d696\U0001d699\U0001d69c \U0001d698\U0001d69f\U0001d68e\U0001d69b \U0001d69d\U0001d691\U0001d68e \U0001d695\U0001d68a\U0001d6a3\U0001d6a2 \U0001d68d\U0001d698\U0001d690')
ctx.rule(u'NAUGHTYSTRING',u'\u24af\u24a3\u24a0 \u24ac\u24b0\u24a4\u249e\u24a6 \u249d\u24ad\u24aa\u24b2\u24a9 \u24a1\u24aa\u24b3 \u24a5\u24b0\u24a8\u24ab\u24ae \u24aa\u24b1\u24a0\u24ad \u24af\u24a3\u24a0 \u24a7\u249c\u24b5\u24b4 \u249f\u24aa\u24a2')
ctx.rule(u'NAUGHTYSTRING',u' ')
ctx.rule(u'NAUGHTYSTRING',u'%')
ctx.rule(u'NAUGHTYSTRING',u'_')
ctx.rule(u'NAUGHTYSTRING',u'-')
ctx.rule(u'NAUGHTYSTRING',u'--')
ctx.rule(u'NAUGHTYSTRING',u'--version')
ctx.rule(u'NAUGHTYSTRING',u'--help')
ctx.rule(u'NAUGHTYSTRING',u'$USER')
ctx.rule(u'NAUGHTYSTRING',u'`ls -al /`')
ctx.rule(u'NAUGHTYSTRING',u"<<< %s(un='%s') = %u")
ctx.rule(u'NAUGHTYSTRING',u'+++ATH0')
ctx.rule(u'NAUGHTYSTRING',u'CON')
ctx.rule(u'NAUGHTYSTRING',u'PRN')
ctx.rule(u'NAUGHTYSTRING',u'AUX')
ctx.rule(u'NAUGHTYSTRING',u'CLOCK$')
ctx.rule(u'NAUGHTYSTRING',u'NUL')
ctx.rule(u'NAUGHTYSTRING',u'A:')
ctx.rule(u'NAUGHTYSTRING',u'ZZ:')
ctx.rule(u'NAUGHTYSTRING',u'COM1')
ctx.rule(u'NAUGHTYSTRING',u'LPT1')
ctx.rule(u'NAUGHTYSTRING',u'COM2')
ctx.rule(u'NAUGHTYSTRING',u'DCC SEND STARTKEYLOGGER 0 0 0')
ctx.rule(u'NAUGHTYSTRING',u'http://www.cum.qc.ca/')
ctx.rule(u'NAUGHTYSTRING',u'Roses are \x1b[0;31mred\x1b[0m, violets are \x1b[0;34mblue. Hope you enjoy terminal hue')
ctx.rule(u'NAUGHTYSTRING',u'But now...\x1b[20Cfor my greatest trick...\x1b[8m')
ctx.rule(u'NAUGHTYSTRING',u'The quic\x08\x08\x08\x08\x08\x08k brown fo\x07\x07\x07\x07\x07\x07\x07\x07\x07\x07\x07x... [Beeeep]')
ctx.rule(u'NAUGHTYSTRING',u'Power\u0644\u064f\u0644\u064f\u0635\u0651\u0628\u064f\u0644\u064f\u0644\u0635\u0651\u0628\u064f\u0631\u0631\u064b \u0963 \u0963h \u0963 \u0963\u5197')
ctx.rule(u'NAUGHTYSTRING',u'AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZ')
ctx.rule(u'IDENTIFIER',u'Object')
ctx.rule(u'IDENTIFIER',u'{VAR}')
ctx.rule(u'IDENTIFIER',u'Function')
ctx.rule(u'IDENTIFIER',u'main')
ctx.rule(u'IDENTIFIER',u'opt')
ctx.rule(u'IDENTIFIER',u'Boolean')
ctx.rule(u'IDENTIFIER',u'Symbol')
ctx.rule(u'IDENTIFIER',u'JSON')
ctx.rule(u'IDENTIFIER',u'Error')
ctx.rule(u'IDENTIFIER',u'EvalError')
ctx.rule(u'IDENTIFIER',u'RangeError')
ctx.rule(u'IDENTIFIER',u'ReferenceError')
ctx.rule(u'IDENTIFIER',u'SyntaxError')
ctx.rule(u'IDENTIFIER',u'TypeError')
ctx.rule(u'IDENTIFIER',u'URIError')
ctx.rule(u'IDENTIFIER',u'this')
ctx.rule(u'IDENTIFIER',u'Number')
ctx.rule(u'IDENTIFIER',u'Math')
ctx.rule(u'IDENTIFIER',u'Date')
ctx.rule(u'IDENTIFIER',u'String')
ctx.rule(u'IDENTIFIER',u'RegExp')
ctx.rule(u'IDENTIFIER',u'Array')
ctx.rule(u'IDENTIFIER',u'Int8Array')
ctx.rule(u'IDENTIFIER',u'Uint8Array')
ctx.rule(u'IDENTIFIER',u'Uint8ClampedArray')
ctx.rule(u'IDENTIFIER',u'Int16Array')
ctx.rule(u'IDENTIFIER',u'Uint16Array')
ctx.rule(u'IDENTIFIER',u'Int32Array')
ctx.rule(u'IDENTIFIER',u'Uint32Array')
ctx.rule(u'IDENTIFIER',u'Float32Array')
ctx.rule(u'IDENTIFIER',u'Float64Array')
ctx.rule(u'IDENTIFIER',u'DataView')
ctx.rule(u'IDENTIFIER',u'ArrayBuffer')
ctx.rule(u'IDENTIFIER',u'Map')
ctx.rule(u'IDENTIFIER',u'Set')
ctx.rule(u'IDENTIFIER',u'WeakMap')
ctx.rule(u'IDENTIFIER',u'WeakSet')
ctx.rule(u'IDENTIFIER',u'Promise')
ctx.rule(u'IDENTIFIER',u'AsyncFunction')
ctx.rule(u'IDENTIFIER',u'asyncGenerator')
ctx.rule(u'IDENTIFIER',u'Reflect')
ctx.rule(u'IDENTIFIER',u'Proxy')
ctx.rule(u'IDENTIFIER',u'Intl')
ctx.rule(u'IDENTIFIER',u'Intl.Collator')
ctx.rule(u'IDENTIFIER',u'Intl.DateTimeFormat')
ctx.rule(u'IDENTIFIER',u'Intl.NumberFormat')
ctx.rule(u'IDENTIFIER',u'Intl.PluralRules')
ctx.rule(u'IDENTIFIER',u'WebAssembly')
ctx.rule(u'IDENTIFIER',u'WebAssembly.Module')
ctx.rule(u'IDENTIFIER',u'WebAssembly.Instance')
ctx.rule(u'IDENTIFIER',u'WebAssembly.Memory')
ctx.rule(u'IDENTIFIER',u'WebAssembly.Table')
ctx.rule(u'IDENTIFIER',u'WebAssembly.CompileError')
ctx.rule(u'IDENTIFIER',u'WebAssembly.LinkError')
ctx.rule(u'IDENTIFIER',u'WebAssembly.RuntimeError')
ctx.rule(u'IDENTIFIER',u'arguments')
ctx.rule(u'IDENTIFIER',u'Infinity')
ctx.rule(u'IDENTIFIER',u'NaN')
ctx.rule(u'IDENTIFIER',u'undefined')
ctx.rule(u'IDENTIFIER',u'null')
ctx.rule(u'IDENTIFIER',u'console')
ctx.rule(u'IDENTIFIER',u'')
ctx.rule(u'SIMD_TYPE',u'{SIMD_TYPE_BOOL}')
ctx.rule(u'SIMD_TYPE',u'{SIMD_TYPE_INT}')
ctx.rule(u'SIMD_TYPE',u'{SIMD_TYPE_UINT}')
ctx.rule(u'SIMD_TYPE',u'{SIMD_TYPE_FLOAT}')
ctx.rule(u'SIMD_TYPE_BOOL',u'Bool8x16')
ctx.rule(u'SIMD_TYPE_BOOL',u'Bool16x8')
ctx.rule(u'SIMD_TYPE_BOOL',u'Bool32x4')
ctx.rule(u'SIMD_TYPE_BOOL',u'Bool64x2')
ctx.rule(u'SIMD_TYPE_INT',u'Int8x16')
ctx.rule(u'SIMD_TYPE_INT',u'Int16x8')
ctx.rule(u'SIMD_TYPE_INT',u'Int32x4')
ctx.rule(u'SIMD_TYPE_UINT',u'Uint8x16')
ctx.rule(u'SIMD_TYPE_UINT',u'Uint16x8')
ctx.rule(u'SIMD_TYPE_UINT',u'Uint32x4')
ctx.rule(u'SIMD_TYPE_FLOAT',u'Float32x4')
ctx.rule(u'SIMD_TYPE_FLOAT',u'Float64x2')
ctx.rule(u'SIMD_FUNCTION',u'splat')
ctx.rule(u'SIMD_FUNCTION',u'check')
ctx.rule(u'SIMD_FUNCTION',u'extractLane')
ctx.rule(u'SIMD_FUNCTION',u'replaceLane')
ctx.rule(u'SIMD_FUNCTION',u'load')
ctx.rule(u'SIMD_FUNCTION',u'load1')
ctx.rule(u'SIMD_FUNCTION',u'load2')
ctx.rule(u'SIMD_FUNCTION',u'load3')
ctx.rule(u'SIMD_FUNCTION',u'store')
ctx.rule(u'SIMD_FUNCTION',u'store1')
ctx.rule(u'SIMD_FUNCTION',u'store2')
ctx.rule(u'SIMD_FUNCTION',u'store3')
ctx.rule(u'SIMD_FUNCTION',u'abs')
ctx.rule(u'SIMD_FUNCTION',u'add')
ctx.rule(u'SIMD_FUNCTION',u'addSaturate')
ctx.rule(u'SIMD_FUNCTION',u'div')
ctx.rule(u'SIMD_FUNCTION',u'mul')
ctx.rule(u'SIMD_FUNCTION',u'sub')
ctx.rule(u'SIMD_FUNCTION',u'subSaturate')
ctx.rule(u'SIMD_FUNCTION',u'sqrt')
ctx.rule(u'SIMD_FUNCTION',u'select')
ctx.rule(u'SIMD_FUNCTION',u'neg')
ctx.rule(u'SIMD_FUNCTION',u'reciprocalApproximation')
ctx.rule(u'SIMD_FUNCTION',u'reciprocalSqrtApproximation')
ctx.rule(u'SIMD_FUNCTION',u'shuffle')
ctx.rule(u'SIMD_FUNCTION',u'swizzle')
ctx.rule(u'SIMD_FUNCTION',u'max')
ctx.rule(u'SIMD_FUNCTION',u'maxNum')
ctx.rule(u'SIMD_FUNCTION',u'min')
ctx.rule(u'SIMD_FUNCTION',u'minNum')
ctx.rule(u'SIMD_FUNCTION',u'equal')
ctx.rule(u'SIMD_FUNCTION',u'notEqual')
ctx.rule(u'SIMD_FUNCTION',u'lessThan')
ctx.rule(u'SIMD_FUNCTION',u'lessThanOrEqual')
ctx.rule(u'SIMD_FUNCTION',u'greaterThan')
ctx.rule(u'SIMD_FUNCTION',u'greaterThanOrEqual')
ctx.rule(u'SIMD_FUNCTION',u'and')
ctx.rule(u'SIMD_FUNCTION',u'or')
ctx.rule(u'SIMD_FUNCTION',u'xor')
ctx.rule(u'SIMD_FUNCTION',u'not')
ctx.rule(u'SIMD_FUNCTION',u'shiftLeftByScalar')
ctx.rule(u'SIMD_FUNCTION',u'shiftRightByScalar')
ctx.rule(u'SIMD_FUNCTION',u'allTrue')
ctx.rule(u'SIMD_FUNCTION',u'anyTrue')
ctx.rule(u'SIMD_FUNCTION',u'fromFloat32x4')
ctx.rule(u'SIMD_FUNCTION',u'fromFloat32x4Bits')
ctx.rule(u'SIMD_FUNCTION',u'fromFloat64x2Bits')
ctx.rule(u'SIMD_FUNCTION',u'fromInt32x4')
ctx.rule(u'SIMD_FUNCTION',u'fromInt32x4Bits')
ctx.rule(u'SIMD_FUNCTION',u'fromInt16x8Bits')
ctx.rule(u'SIMD_FUNCTION',u'fromInt8x16Bits')
ctx.rule(u'SIMD_FUNCTION',u'fromUint32x4')
ctx.rule(u'SIMD_FUNCTION',u'fromUint32x4Bits')
ctx.rule(u'SIMD_FUNCTION',u'fromUint16x8Bits')
ctx.rule(u'SIMD_FUNCTION',u'fromUint8x16Bits')
